// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deserializeDocuments deserializes documents as arrays 1`] = `
Array [
  Object {
    "data": Object {},
    "path": "documents/1",
  },
  Object {
    "data": Object {},
    "path": "documents/2",
  },
  Object {
    "data": Object {},
    "path": "documents/3",
  },
]
`;

exports[`deserializeDocuments deserializes documents with collection references 1`] = `
Array [
  Object {
    "data": Object {
      "id": "1",
      "reference": CollectionReference {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
      "references": Array [
        CollectionReference {
          "_allowUndefined": false,
          "_firestore": Object {
            "projectId": "demo",
          },
          "_queryOptions": QueryOptions {
            "allDescendants": false,
            "collectionId": "documents",
            "converter": Object {
              "fromFirestore": [Function],
              "toFirestore": [Function],
            },
            "endAt": undefined,
            "fieldFilters": Array [],
            "fieldOrders": Array [],
            "kindless": false,
            "limit": undefined,
            "limitType": undefined,
            "offset": undefined,
            "parentPath": ResourcePath {
              "segments": Array [],
            },
            "projection": undefined,
            "requireConsistency": true,
            "startAt": undefined,
          },
          "_serializer": Serializer {
            "allowUndefined": false,
            "createInteger": [Function],
            "createReference": [Function],
          },
        },
      ],
    },
    "path": "documents/1",
    "queries": Array [
      "reference",
      "references.0",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with document references 1`] = `
Array [
  Object {
    "data": Object {
      "id": "1",
      "reference": DocumentReference {
        "_converter": Object {
          "fromFirestore": [Function],
          "toFirestore": [Function],
        },
        "_firestore": Object {
          "projectId": "demo",
        },
        "_path": ResourcePath {
          "segments": Array [
            "documents",
            "2",
          ],
        },
      },
      "references": Array [
        DocumentReference {
          "_converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "_firestore": Object {
            "projectId": "demo",
          },
          "_path": ResourcePath {
            "segments": Array [
              "documents",
              "2",
            ],
          },
        },
      ],
    },
    "documents": Array [
      "reference",
      "references.0",
    ],
    "path": "documents/1",
  },
]
`;

exports[`deserializeDocuments deserializes documents with geopoints 1`] = `
Array [
  Object {
    "data": Object {
      "id": "1",
      "nested": Object {
        "places": Array [
          GeoPoint {
            "_latitude": 11,
            "_longitude": 20,
          },
          GeoPoint {
            "_latitude": 12,
            "_longitude": 20,
          },
        ],
      },
      "point": GeoPoint {
        "_latitude": 10,
        "_longitude": 20,
      },
    },
    "geopoints": Array [
      "point",
      "nested.places.0",
      "nested.places.1",
    ],
    "path": "documents/1",
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries endAt (with boolean and array proto fields) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": Object {
            "before": false,
            "values": Array [
              Object {
                "mapValue": Object {
                  "fields": Object {
                    "counts": Object {
                      "arrayValue": Object {
                        "values": Array [
                          Object {
                            "integerValue": 1,
                          },
                          Object {
                            "integerValue": 2,
                          },
                          Object {
                            "integerValue": 3,
                          },
                        ],
                      },
                    },
                    "error": Object {
                      "booleanValue": true,
                    },
                  },
                },
              },
            ],
          },
          "fieldFilters": Array [],
          "fieldOrders": Array [
            FieldOrder {
              "direction": "ASCENDING",
              "field": FieldPath {
                "segments": Array [
                  "properties",
                ],
              },
            },
          ],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries endBefore (with multiple proto fields) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": Object {
            "before": true,
            "values": Array [
              Object {
                "doubleValue": 12.5,
              },
              Object {
                "mapValue": Object {
                  "fields": Object {
                    "color": Object {
                      "stringValue": "blue",
                    },
                  },
                },
              },
            ],
          },
          "fieldFilters": Array [],
          "fieldOrders": Array [
            FieldOrder {
              "direction": "ASCENDING",
              "field": FieldPath {
                "segments": Array [
                  "average",
                ],
              },
            },
            FieldOrder {
              "direction": "ASCENDING",
              "field": FieldPath {
                "segments": Array [
                  "properties",
                ],
              },
            },
          ],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries field filter (where: array) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "threads",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [
            FieldFilter {
              "field": FieldPath {
                "segments": Array [
                  "id",
                ],
              },
              "op": "IN",
              "serializer": Serializer {
                "allowUndefined": false,
                "createInteger": [Function],
                "createReference": [Function],
              },
              "value": Array [
                15,
                16,
                17,
              ],
            },
            FieldFilter {
              "field": FieldPath {
                "segments": Array [
                  "count",
                ],
              },
              "op": "ARRAY_CONTAINS",
              "serializer": Serializer {
                "allowUndefined": false,
                "createInteger": [Function],
                "createReference": [Function],
              },
              "value": Array [
                1,
                2,
                3,
                4,
              ],
            },
          ],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [
              "documents",
              "1",
            ],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries field filter (where: comparison) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "threads",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [
            FieldFilter {
              "field": FieldPath {
                "segments": Array [
                  "details",
                  "count",
                ],
              },
              "op": "GREATER_THAN",
              "serializer": Serializer {
                "allowUndefined": false,
                "createInteger": [Function],
                "createReference": [Function],
              },
              "value": 10,
            },
            FieldFilter {
              "field": FieldPath {
                "segments": Array [
                  "details",
                  "count",
                ],
              },
              "op": "LESS_THAN_OR_EQUAL",
              "serializer": Serializer {
                "allowUndefined": false,
                "createInteger": [Function],
                "createReference": [Function],
              },
              "value": 100,
            },
          ],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [
              "documents",
              "1",
            ],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries field filter (where: equality) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "threads",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [
            FieldFilter {
              "field": FieldPath {
                "segments": Array [
                  "id",
                ],
              },
              "op": "EQUAL",
              "serializer": Serializer {
                "allowUndefined": false,
                "createInteger": [Function],
                "createReference": [Function],
              },
              "value": "1",
            },
            FieldFilter {
              "field": FieldPath {
                "segments": Array [
                  "user",
                ],
              },
              "op": "NOT_EQUAL",
              "serializer": Serializer {
                "allowUndefined": false,
                "createInteger": [Function],
                "createReference": [Function],
              },
              "value": "123",
            },
          ],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [
              "documents",
              "1",
            ],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries field order (orderBy) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "threads",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [
            FieldOrder {
              "direction": "ASCENDING",
              "field": FieldPath {
                "segments": Array [
                  "id",
                ],
              },
            },
            FieldOrder {
              "direction": "DESCENDING",
              "field": FieldPath {
                "segments": Array [
                  "date",
                ],
              },
            },
          ],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [
              "documents",
              "1",
            ],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries limit 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": 10,
          "limitType": 0,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries limitToLast 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": 10,
          "limitType": 1,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries offset 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": 10,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": undefined,
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries startAfter (with nested map proto fields) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [
            FieldOrder {
              "direction": "DESCENDING",
              "field": FieldPath {
                "segments": Array [
                  "properties",
                ],
              },
            },
          ],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": Object {
            "before": false,
            "values": Array [
              Object {
                "mapValue": Object {
                  "fields": Object {
                    "info": Object {
                      "mapValue": Object {
                        "fields": Object {
                          "strength": Object {
                            "stringValue": "high",
                          },
                        },
                      },
                    },
                  },
                },
              },
            ],
          },
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with queries startAt (with integer proto field) 1`] = `
Array [
  Object {
    "data": Object {
      "ref": Query {
        "_allowUndefined": false,
        "_firestore": Object {
          "projectId": "demo",
        },
        "_queryOptions": QueryOptions {
          "allDescendants": false,
          "collectionId": "documents",
          "converter": Object {
            "fromFirestore": [Function],
            "toFirestore": [Function],
          },
          "endAt": undefined,
          "fieldFilters": Array [],
          "fieldOrders": Array [
            FieldOrder {
              "direction": "ASCENDING",
              "field": FieldPath {
                "segments": Array [
                  "id",
                ],
              },
            },
          ],
          "kindless": false,
          "limit": undefined,
          "limitType": undefined,
          "offset": undefined,
          "parentPath": ResourcePath {
            "segments": Array [],
          },
          "projection": undefined,
          "requireConsistency": true,
          "startAt": Object {
            "before": true,
            "values": Array [
              Object {
                "integerValue": 10,
              },
            ],
          },
        },
        "_serializer": Serializer {
          "allowUndefined": false,
          "createInteger": [Function],
          "createReference": [Function],
        },
      },
    },
    "path": "documents/1",
    "queries": Array [
      "ref",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with timestamps 1`] = `
Array [
  Object {
    "data": Object {
      "date": Timestamp {
        "_nanoseconds": 0,
        "_seconds": 1640995200,
      },
      "id": "1",
      "nested": Object {
        "dates": Array [
          Timestamp {
            "_nanoseconds": 0,
            "_seconds": 1640995200,
          },
          Timestamp {
            "_nanoseconds": 0,
            "_seconds": 1640995200,
          },
        ],
      },
    },
    "path": "documents/1",
    "timestamps": Array [
      "date",
      "nested.dates.0",
      "nested.dates.1",
    ],
  },
]
`;

exports[`deserializeDocuments deserializes documents with timestamps 2`] = `2022-01-01T00:00:00.000Z`;

exports[`deserializeDocuments deserializes plain documents 1`] = `
Array [
  Object {
    "data": Object {
      "attachments": 2,
      "content": "Dear John,
Hello world!",
      "from": "example@email.com",
      "tags": Object {
        "important": true,
        "work": true,
      },
      "to": Array [
        "recipient1@email.com",
        "recipient2@email.com",
      ],
    },
    "path": "documents/1",
  },
]
`;
